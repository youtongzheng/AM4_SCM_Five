stages:
  - merge+setup
  - builds
  - run
  - tests
  - cleanup

# Merges MOM6 with dev/gfdl. Changes directory to test directory, if it exists.
before_script:
  - MOM6_SRC=$CI_PROJECT_DIR
  - CACHE_DIR=/lustre/f1/oar.gfdl.ogrp-account/runner/cache/
  - git pull --no-edit https://github.com/NOAA-GFDL/MOM6.git dev/gfdl && git submodule init && git submodule update
  - pwd ; ls

# Tests that merge with dev/gfdl works.
merge:
  stage: merge+setup
  tags:
    - ncrc4
  script:
    - pwd ; ls
    - git pull --no-edit https://github.com/NOAA-GFDL/MOM6.git dev/gfdl

# Clones regression repo, if necessary, pulls latest of everything, and sets up working space
setup:
  stage: merge+setup
  tags:
    - ncrc4
  script:
    - pwd ; ls
    # Clone regressions directory
    - git clone --recursive http://gitlab.gfdl.noaa.gov/ogrp/Gaea-stats-MOM6-examples.git tests && cd tests
    # Install / update testing scripts
    - git clone https://github.com/adcroft/MRS.git MRS
    # Update MOM6-examples and submodules
    - (cd MOM6-examples && git checkout . && git checkout dev/gfdl && git pull && git submodule init && git submodule update)
    - test -d MOM6-examples/src/LM3 || make -f MRS/Makefile.clone clone_gfdl -s
    - make -f MRS/Makefile.clone MOM6-examples/.datasets -s
    #- (cd MOM6-examples/src/mkmf && git pull https://github.com/adcroft/mkmf.git add_coverage_mode)
    - env > gitlab_session.log
    - cd ../ ; time tar zcf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz tests

# Compiles
gnu:repro:
  stage: builds
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time make -f MRS/Makefile.build MOM6_SRC=../ build_gnu -s -j
    - time make -f MRS/Makefile.build MOM6_SRC=../ static_gnu -s -j
    - time tar zvcf $CACHE_DIR/build-gnu-repro-$CI_PIPELINE_ID.tgz `find build/gnu -name MOM6`

intel:repro:
  stage: builds
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - make -f MRS/Makefile.build MOM6_SRC=../ build_intel -s -j
    - time tar zvcf $CACHE_DIR/build-intel-repro-$CI_PIPELINE_ID.tgz `find build/intel -name MOM6`

pgi:repro:
  stage: builds
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - make -f MRS/Makefile.build MOM6_SRC=../ build_pgi -s -j
    - time tar zvcf $CACHE_DIR/build-pgi-repro-$CI_PIPELINE_ID.tgz `find build/pgi -name MOM6`

gnu:debug:
  stage: builds
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - make -f MRS/Makefile.build MOM6_SRC=../ debug_gnu -s -j
    - time tar zvcf $CACHE_DIR/build-gnu-debug-$CI_PIPELINE_ID.tgz `find build/gnu -name MOM6`

# Runs
run:
  stage: run
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/build-gnu-repro-$CI_PIPELINE_ID.tgz
    - time tar zxf $CACHE_DIR/build-intel-repro-$CI_PIPELINE_ID.tgz
    - time tar zxf $CACHE_DIR/build-pgi-repro-$CI_PIPELINE_ID.tgz
    # time tar zxf $CACHE_DIR/build-gnu-debug-$CI_PIPELINE_ID.tgz
    - echo "make -f MRS/Makefile.tests all -B" > job.sh
    - msub -l partition=c4,nodes=29,walltime=00:24:00,qos=norm -q debug -S /bin/tcsh -j oe -A gfdl_o -z -o log.$CI_PIPELINE_ID -N mom6_regression -K job.sh
    - cat log.$CI_PIPELINE_ID
    - time tar zvcf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz *.tar.gz

# Tests
gnu:non-symmetric:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests gnu_non_symmetric

intel:non-symmetric:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests intel_non_symmetric

pgi:non-symmetric:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests pgi_non_symmetric

gnu:symmetric:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests gnu_symmetric

intel:symmetric:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests intel_symmetric

pgi:symmetric:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests pgi_symmetric

gnu:layout:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests gnu_layout

intel:layout:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests intel_layout

pgi:layout:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests pgi_layout

gnu:static:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests gnu_static

gnu:restart:
  stage: tests
  tags:
    - ncrc4
  script:
    - time tar zxf $CACHE_DIR/tests_$CI_PIPELINE_ID.tgz && cd tests
    - time tar zxf $CACHE_DIR/results-$CI_PIPELINE_ID.tgz
    - make -f MRS/Makefile.tests gnu_check_restarts

cleanup:
  stage: cleanup
  tags:
    - ncrc4
  script:
    - rm $CACHE_DIR/*$CI_PIPELINE_ID.tgz
