#***********************************************************************
#*                   GNU Lesser General Public License
#*
#* This file is part of the GFDL Flexible Modeling System (FMS).
#*
#* FMS is free software: you can redistribute it and/or modify it under
#* the terms of the GNU Lesser General Public License as published by
#* the Free Software Foundation, either version 3 of the License, or (at
#* your option) any later version.
#*
#* FMS is distributed in the hope that it will be useful, but WITHOUT
#* ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#* FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#* for more details.
#*
#* You should have received a copy of the GNU Lesser General Public
#* License along with FMS.  If not, see <http://www.gnu.org/licenses/>.
#***********************************************************************

# This Travis-CI file for testing the build, and eventually the
# functionality of the libfms library.
#
# This Travis-CI file was created based off the NOAA-GFDL/MOM6
# Travis-CI file.

# FMS is not a c-language project, although there are a few c-language
# sources.  However, this is the best choice.
language: c
os: linux
dist: bionic

addons:
  apt:
    sources:
    - ubuntu-toolchain-r-test
    packages:
    - pkg-config gfortran netcdf-bin libnetcdf-dev libnetcdff-dev openmpi-bin libopenmpi-dev

jobs:
  include:
    - name: build_with_autotools
      env:
        - FCFLAGS_ADD='' DISTCHECK_CONFIGURE_FLAGS=''

      # Travis sets CC to gcc, but we need to ensure it is not set, so we can use mpicc
      before_install:
        - test -n "$CC" && unset CC

      before_script:
        - export CC=mpicc
        - export FC=mpif90
        - export CPPFLAGS="-I/usr/include -Duse_LARGEFILE -DMAXFIELDMETHODS_=500"
        - export FCFLAGS="-Waliasing -fno-range-check ${FCFLAGS_ADD}"
        - export LDFLAGS='-L/usr/lib'
        - export VERBOSE=1

      script:
        - autoreconf -i
        - ./configure ${DISTCHECK_CONFIGURE_FLAGS}
        - make -j distcheck
#build_with_autotools_no_openmp
    - name: build_with_autotools_no_openmp
      env:
        - FCFLAGS_ADD='' DISTCHECK_CONFIGURE_FLAGS='--without-openmp'

      before_install:
        - test -n "$CC" && unset CC

      before_script:
        - export CC=mpicc
        - export FC=mpif90
        - export CPPFLAGS="-I/usr/include -Duse_LARGEFILE -DMAXFIELDMETHODS_=500"
        - export FCFLAGS="-Waliasing -fno-range-check ${FCFLAGS_ADD}"
        - export LDFLAGS='-L/usr/lib'
        - export VERBOSE=1

      script:
        - autoreconf -i
        - ./configure ${DISTCHECK_CONFIGURE_FLAGS}
        - make -j distcheck
#build_with_autotools_mixed_mode
    - name: build_with_autotools_mixed_mode
      env:
        - FCFLAGS_ADD='' DISTCHECK_CONFIGURE_FLAGS='--enable-mixed-mode'

      before_install:
        - test -n "$CC" && unset CC

      before_script:
        - export CC=mpicc
        - export FC=mpif90
        - export CPPFLAGS="-I/usr/include -Duse_LARGEFILE -DMAXFIELDMETHODS_=500"
        - export FCFLAGS="-Waliasing -fno-range-check ${FCFLAGS_ADD}"
        - export LDFLAGS='-L/usr/lib'
        - export VERBOSE=1

      script:
        - autoreconf -i
        - ./configure ${DISTCHECK_CONFIGURE_FLAGS}
        - make -j distcheck
#build_with_autotools_r8
    - name: build_with_autotools_r8
      env:
        - FCFLAGS_ADD='-fdefault-real-8 -fdefault-double-8 -fcray-pointer -ffree-line-length-none' DISTCHECK_CONFIGURE_FLAGS='--disable-setting-flags'

      before_install:
        - test -n "$CC" && unset CC

      before_script:
        - export CC=mpicc
        - export FC=mpif90
        - export CPPFLAGS="-I/usr/include -Duse_LARGEFILE -DMAXFIELDMETHODS_=500"
        - export FCFLAGS="-Waliasing -fno-range-check ${FCFLAGS_ADD}"
        - export LDFLAGS='-L/usr/lib'
        - export VERBOSE=1

      script:
        - autoreconf -i
        - ./configure ${DISTCHECK_CONFIGURE_FLAGS}
        - make -j distcheck
#build_with_autotools_mpp_io
    - name: build_with_autotools_mpp_io
      env:
        - FCFLAGS_ADD='' DISTCHECK_CONFIGURE_FLAGS='--enable-mpp-io'

      before_install:
        - test -n "$CC" && unset CC

      before_script:
        - export CC=mpicc
        - export FC=mpif90
        - export CPPFLAGS="-I/usr/include -Duse_LARGEFILE -DMAXFIELDMETHODS_=500"
        - export FCFLAGS="-Waliasing -fno-range-check ${FCFLAGS_ADD}"
        - export LDFLAGS='-L/usr/lib'
        - export VERBOSE=1

      script:
        - autoreconf -i
        - ./configure ${DISTCHECK_CONFIGURE_FLAGS}
        - make -j distcheck

    - name: build_with_cmake
      env:
        - FCFLAGS_ADD='' DISTCHECK_CONFIGURE_FLAGS=''

      before_install:
        - test -n "$CC" && unset CC

      before_script:
        - export CC=mpicc
        - export FC=mpif90
        - export NetCDF_ROOT=`nc-config --prefix`
        - export VERBOSE=1
        - export CFLAGS="-DMAXFIELDMETHODS_=500"
        - export CPPFLAGS="-DMAXFIELDMETHODS_=500"

      script:
        - mkdir -p build_cmake
        - cd build_cmake
        - cmake -DCMAKE_INSTALL_PREFIX=../install_cmake -DOPENMP=OFF -D64BIT=ON -DLARGEFILE=ON ..
        - make -j 2
        - make install
